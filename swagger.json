{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "challenge5",
    "description": "Documentation of challenge 4 assignment. For this sample, you can use the api key `secret` to test the authorization filters."
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "schemes": [
    "https",
    "http"
  ],
  "tags": [
    {
      "name": "User",
      "description": "Everything about user"
    },
    {
      "name": "Bio",
      "description": "Everything about bio"
    },
    {
      "name": "History",
      "description": "Everything about history"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new user",
        "description": "Create new user from request body",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "required": true,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "User created successfully"
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Please fill all the fields"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "Getting all users data",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "Users retrieved successfully"
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by id",
        "description": "Getting user data by id params",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "User data retrieved successfully"
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user data by id",
        "description": "Updating user data by request body",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "User data updated successfully"
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user by id",
        "description": "Deleting user data by id params",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "User data deleted successfully"
                },
                "data": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/bio": {
      "post": {
        "tags": [
          "Bio"
        ],
        "summary": "Create new bio",
        "description": "Create new bio data by request body",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "required": true,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Bio"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "Bio created successfully"
                },
                "data": {
                  "$ref": "#/definitions/Bio"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Please fill all the fields"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Bio"
        ],
        "summary": "Get all bio",
        "description": "Get all user bio data",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "Bio retrieved successfully"
                },
                "data": {
                  "$ref": "#/definitions/Bio"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/bio/{id}": {
      "get": {
        "tags": [
          "Bio"
        ],
        "summary": "Get bio by id",
        "description": "Get user bio data using id params",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "Bio data retrieved successfully"
                },
                "data": {
                  "$ref": "#/definitions/UserBio"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bio"
        ],
        "summary": "Update bio data by id",
        "description": "Updating user bio data by id params",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "Bio data updated successfully"
                },
                "data": {
                  "$ref": "#/definitions/Bio"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bio"
        ],
        "summary": "Delete bio by id",
        "description": "Delete user bio data by id params",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "Bio data deleted successfully"
                },
                "data": {
                  "$ref": "#/definitions/Bio"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/histories": {
      "post": {
        "tags": [
          "History"
        ],
        "summary": "Create new history",
        "description": "Create new user history by request body",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "required": true,
            "name": "body",
            "schema": {
              "$ref": "#/definitions/History"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "History created successfully"
                },
                "data": {
                  "$ref": "#/definitions/History"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Please fill all the fields"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      }
    },
    "/histories/{id}": {
      "get": {
        "tags": [
          "History"
        ],
        "summary": "Get history by id",
        "description": "Get user history by id params",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "History data retrieved successfully"
                },
                "data": {
                  "$ref": "#/definitions/UserHistory"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "History"
        ],
        "summary": "Update history data by id",
        "description": "Update user history by id params",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "History data updated successfully"
                },
                "data": {
                  "$ref": "#/definitions/History"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "History"
        ],
        "summary": "Delete history by id",
        "description": "Delete history user by id params",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "type": "string",
                  "example": "History data deleted successfully"
                },
                "data": {
                  "$ref": "#/definitions/History"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "Error"
                },
                "message": {
                  "type": "string",
                  "example": "Internal Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "auth"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "username": {
          "type": "string",
          "example": "johndoe123"
        },
        "password": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "Bio": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "age": {
          "type": "integer",
          "example": 20
        },
        "user_id": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "History": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "score": {
          "type": "integer",
          "example": 20000
        },
        "score_date": {
          "type": "string",
          "example": "2017-07-21"
        },
        "user_id": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "UserBio": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "age": {
          "type": "integer",
          "example": 20
        },
        "owner": {
          "example": {
            "id": 1,
            "username": "johndoe123",
            "password": "password"
          }
        }
      }
    },
    "UserHistory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "score": {
          "type": "integer",
          "example": 20000
        },
        "score_date": {
          "type": "string",
          "example": "2017-07-21"
        },
        "owner": {
          "example": {
            "id": 1,
            "username": "johndoe123",
            "password": "password"
          }
        }
      }
    }
  }
}